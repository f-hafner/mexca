name: Docker containers

on:
  workflow_dispatch: # For manual triggering
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    name: Build Docker containers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ["face-extractor", "speaker-identifier", "voice-extractor", "audio-transcriber", "sentiment-extractor"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.component }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.component }}-buildx-
      -
        name: Build component from main as 'latest' tag and export
        uses: docker/build-push-action@v3
        # if: github.event_name == 'workflow_dispatch'
        with:
          build-args: |
            HF_TOKEN=${{ secrets.HF_TOKEN }}
            branch=${{ steps.branch-name.outputs.current_branch }}
          context: ./docker/${{ matrix.component }}
          load: true
          push: false
          tags: mexca/${{ matrix.component }}:latest
          outputs: type=docker,dest=/tmp/${{ matrix.component }}.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.component }}
          path: /tmp/${{ matrix.component }}.tar

  use:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download FaceExtractor artifact
        uses: actions/download-artifact@v3
        with:
          name: face-extractor
          path: /tmp
      -
        name: Download SpeakerIdentifier artifact
        uses: actions/download-artifact@v3
        with:
          name: speaker-identifier
          path: /tmp
      -
        name: Download VoiceExtractor artifact
        uses: actions/download-artifact@v3
        with:
          name: voice-extractor
          path: /tmp
      -
        name: Download AudioTranscriber artifact
        uses: actions/download-artifact@v3
        with:
          name: audio-transcriber
          path: /tmp
      -
        name: Download SentimentExtractor artifact
        uses: actions/download-artifact@v3
        with:
          name: sentiment-extractor
          path: /tmp
      -
        name: Load images
        run: |
          docker load --input /tmp/face-extractor.tar
          docker load --input /tmp/speaker-identifier.tar
          docker load --input /tmp/voice-extractor.tar
          docker load --input /tmp/audio-transcriber.tar
          docker load --input /tmp/sentiment-extractor.tar
          docker image ls -a
      -
        name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: 'pip'
          cache-dependency-path: setup.cfg
      -
        name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
      -
        name: Upgrade pip and install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install .[dev]
      -
        name: Run container tests
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: pytest -vv tests/test_container.py
